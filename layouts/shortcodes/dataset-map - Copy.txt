<style>
  #dataset-map {
    height: 600px;
    margin-bottom: 2em;
  }
  .leaflet-container img {
    max-width: none !important;
  }
  .popup-thumb {
    width: 120px;
    height: auto;
    display: block;
    margin-bottom: 0.5em;
    border-radius: 6px;
  }
  .popup-links a {
    display: block;
    text-decoration: underline;
    margin: 0.15em 0;
  }
</style>

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />

<div id="map-wrapper">
  <div id="dataset-map" role="region" aria-label="Archaeological sites map"></div>
</div>

<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script>
  (function () {
    var map = L.map('dataset-map', {
      zoomControl: true,
      worldCopyJump: true
    });

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; OpenStreetMap contributors',
      detectRetina: true,
      maxZoom: 19
    }).addTo(map);

    function buildPopup(site) {
      var html = '';
      if (site.thumbnail) {
        html += '<img class="popup-thumb" src="' + site.thumbnail + '" alt="Thumbnail for ' + (site.name || 'site') + '">';
      }
      if (site.name) {
        html += '<strong>' + site.name + '</strong><br>';
      }
      html += '<div class="popup-links">';
      if (site.attribute_url) {
        html += '<a href="' + site.attribute_url + '" target="_blank" rel="noopener">Attribute data</a>';
      }
      if (site["3d_url"]) {
        html += '<a href="' + site["3d_url"] + '" target="_blank" rel="noopener">3D data</a>';
      }
      html += '</div>';
      return html;
    }

    var DefaultIcon = L.Icon.Default.extend({
      options: {
        iconSize:    [25, 41], iconAnchor:  [12, 41], popupAnchor: [ 1, -34],
        tooltipAnchor: [16, -28], shadowSize:  [41, 41]
      }
    });
    var defaultIcon = new DefaultIcon();

    fetch('/data/datasets.json', { cache: 'no-cache' })
      .then(function (response) { return response.json(); })
      .then(function (data) {
        var markers = [];
        data.forEach(function (site) {
          var lat = Number(site.lat);
          var lon = Number(site.lon);
          if (Number.isFinite(lat) && Number.isFinite(lon)) {
            L.marker([lat, lon], { icon: defaultIcon }).addTo(map).bindPopup(buildPopup(site));
            markers.push([lat, lon]);
          }
        });

        if (markers.length) {
          map.fitBounds(L.latLngBounds(markers).pad(0.2));
        } else {
          map.setView([42.5, 12.5], 5);
        }
      })
      .catch(function (err) {
        console.error('Error loading datasets.json:', err);
        map.setView([42.5, 12.5], 5);
      });
      
    // This makes sure the map recalculates its size after the page loads
    setTimeout(function() {
        map.invalidateSize();
    }, 500);
  })();
</script>